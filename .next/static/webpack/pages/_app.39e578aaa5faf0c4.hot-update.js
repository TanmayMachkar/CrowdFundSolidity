"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./Context/CrowdFunding.js":
/*!*********************************!*\
  !*** ./Context/CrowdFunding.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CrowdFundingContext\": function() { return /* binding */ CrowdFundingContext; },\n/* harmony export */   \"CrowdFundingProvider\": function() { return /* binding */ CrowdFundingProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"./Context/constants.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nconst fetchContract = (signerOrProvider)=>{\n    return new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(_constants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingAddress, _constants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingABI, signerOrProvider);\n};\nconst CrowdFundingContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext();\nconst CrowdFundingProvider = (param)=>{\n    let { children  } = param;\n    _s();\n    const titleData = \"Crowd Funding Contract\";\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [openError, setOpenError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const createCampaign = async (campaign)=>{\n        const { title , description , amount , deadline  } = campaign;\n        const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())();\n        const connection = await web3Modal.connect();\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.Web3Provider(connection);\n        const signer = provider.getSigner();\n        const contract = fetchContract(signer);\n        console.log(currentAccount);\n        try {\n            const transaction = await contract.createCampaign(currentAccount, title, description, ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.util.parseUnits(amount, 18), new Date(deadline).getTime());\n            await transaction.wait();\n            console.log(\"Contract called succesfully\", transaction);\n        } catch (error) {\n            console.log(\"contract call failure\", error);\n        }\n    };\n    const getCampaign = async ()=>{\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.JsonRpcProvider();\n        const contract = fetchContract(provider);\n        const campaigns = await contract.getCampaigns();\n        const parsedCampaigns = campaigns.map((campaign, i)=>({\n                owner: campaign.owner,\n                title: campaign.title,\n                description: campaign.description,\n                target: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.formatEther(campaign.target.toString()),\n                deadline: campaign.deadline.toNumber(),\n                amountCollected: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.formatEther(campaign.amountCollected.toString()),\n                pId: i\n            }));\n        return parsedCampaigns;\n    };\n    const getUserCampaigns = async ()=>{\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.JsonRpcProvider();\n        const contract = fetchContract(provider);\n        const allCampaigns = await contract.getCampaigns();\n        const accounts = await window.ethereum.request({\n            method: \"eth_accounts\"\n        });\n        const currentUser = accounts[0];\n        const filteredCampaigns = allCampaigns.filter((campaign)=>campaign.owner = \"0xf39Fd6e51aad88F64ce6aB8827279cffFb92266\");\n        const userData = filteredCampaigns.map((campaign, i)=>({\n                owner: campaign.owner,\n                title: campaign.title,\n                description: campaign.description,\n                target: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.formatEther(campaign.target.toString()),\n                deadline: campaign.deadline.toNumber(),\n                amountCollected: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.formatEther(campaign.amountCollected.toString()),\n                pId: i\n            }));\n        return userData;\n    };\n    const donate = async (pId, amount)=>{\n        //use web3modal whenever we want to change the data of the smart contract(here we are donating therefore the state variables of smart contract will change)\n        const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())();\n        const connection = await web3Modal.connect();\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.Web3Provider(connection);\n        const signer = provider.getSigner();\n        const contract = fetchContract(signer);\n        const campaignData = await contract.donateToCampaign(pId, {\n            value: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.parseEther(amount) //whatever amount provided will be converted to ethers\n        });\n        await campaignData.wait();\n        location.reload(); //reload current web page\n        return campaignData;\n    };\n    const getDonations = async (pId)=>{\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.JsonRpcProvider();\n        const contract = fetchContract(provider);\n        const donations = await contract.getDonators(pId);\n        const numberOfDonations = donations[0].length;\n        const parsedDonations = [];\n        for(let i = 0; i < numberOfDonations; i++){\n            parsedDonations.push({\n                donator: donations[0][i],\n                donation: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.formatEther(donations[1][i].toString())\n            });\n        }\n        return parsedDonations;\n    };\n    const checkIfWalletConnected = async ()=>{\n        try {\n            if (!window.ethereum) return setOpenError(true), setError(\"Install Metamask\");\n            const accounts = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            if (accounts.length) {\n                setCurrentAccount(accounts[0]);\n            } else {\n                console.log(\"No Account Found\");\n            }\n        } catch (error) {\n            console.log(\"Something wrong while connecting to wallet\");\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkIfWalletConnected();\n    }, []);\n    const connectWallet = async ()=>{\n        try {\n            if (!window.ethereum) return console.log(\"Install Metamask\");\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            setCurrentAccount(accounts[0]);\n        } catch (error) {\n            console.log(\"Error while connecting to wallet\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CrowdFundingContext.Provider, {\n        value: {\n            titleData,\n            currentAccount,\n            createCampaign,\n            getCampaign,\n            getUserCampaigns,\n            donate,\n            getDonations,\n            checkIfWalletConnected,\n            connectWallet\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ADMIN\\\\CrowdFundSolidity\\\\Context\\\\CrowdFunding.js\",\n        lineNumber: 168,\n        columnNumber: 3\n    }, undefined);\n};\n_s(CrowdFundingProvider, \"10z0BH0ZNSQSMEywupe9qqKv9a8=\");\n_c = CrowdFundingProvider;\nvar _c;\n$RefreshReg$(_c, \"CrowdFundingProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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anM/NWRkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFdlYjNNb2RhbCBmcm9tICd3ZWIzbW9kYWwnO1xyXG5pbXBvcnQgeyBldGhlcnMgfSBmcm9tICdldGhlcnMnO1xyXG5cclxuaW1wb3J0IHsgQ3Jvd2RGdW5kaW5nQWRkcmVzcywgQ3Jvd2RGdW5kaW5nQUJJIH0gZnJvbSAnLi9jb25zdGFudHMnO1xyXG5cclxuY29uc3QgZmV0Y2hDb250cmFjdCA9IChzaWduZXJPclByb3ZpZGVyKSA9PiB7XHJcblx0cmV0dXJuIG5ldyBldGhlcnMuQ29udHJhY3QoQ3Jvd2RGdW5kaW5nQWRkcmVzcywgQ3Jvd2RGdW5kaW5nQUJJLCBzaWduZXJPclByb3ZpZGVyKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IENyb3dkRnVuZGluZ0NvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XHJcblxyXG5leHBvcnQgY29uc3QgQ3Jvd2RGdW5kaW5nUHJvdmlkZXIgPSAoeyBjaGlsZHJlbiB9KSA9PiB7XHJcblx0Y29uc3QgdGl0bGVEYXRhID0gJ0Nyb3dkIEZ1bmRpbmcgQ29udHJhY3QnO1xyXG5cdGNvbnN0IFtjdXJyZW50QWNjb3VudCwgc2V0Q3VycmVudEFjY291bnRdID0gdXNlU3RhdGUoXCJcIik7XHJcblx0Y29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZShcIlwiKTtcclxuXHRjb25zdCBbb3BlbkVycm9yLCBzZXRPcGVuRXJyb3JdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG5cclxuXHRjb25zdCBjcmVhdGVDYW1wYWlnbiA9IGFzeW5jKGNhbXBhaWduKSA9PiB7XHJcblx0XHRjb25zdCB7IHRpdGxlLCBkZXNjcmlwdGlvbiwgYW1vdW50LCBkZWFkbGluZSB9ID0gY2FtcGFpZ247XHJcblx0XHRjb25zdCB3ZWIzTW9kYWwgPSBuZXcgV2ViM01vZGFsKCk7XHJcblx0XHRjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgd2ViM01vZGFsLmNvbm5lY3QoKTtcclxuXHRcdGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuV2ViM1Byb3ZpZGVyKGNvbm5lY3Rpb24pO1xyXG5cdFx0Y29uc3Qgc2lnbmVyID0gcHJvdmlkZXIuZ2V0U2lnbmVyKCk7XHJcblx0XHRjb25zdCBjb250cmFjdCA9IGZldGNoQ29udHJhY3Qoc2lnbmVyKTtcclxuXHJcblx0XHRjb25zb2xlLmxvZyhjdXJyZW50QWNjb3VudCk7XHJcblx0XHR0cnl7XHJcblx0XHRcdGNvbnN0IHRyYW5zYWN0aW9uID0gYXdhaXQgY29udHJhY3QuY3JlYXRlQ2FtcGFpZ24oXHJcblx0XHRcdFx0Y3VycmVudEFjY291bnQsXHJcblx0XHRcdFx0dGl0bGUsXHJcblx0XHRcdFx0ZGVzY3JpcHRpb24sXHJcblx0XHRcdFx0ZXRoZXJzLnV0aWwucGFyc2VVbml0cyhhbW91bnQsIDE4KSwgICAgICAvL2NvbnZlcnQgdGFyZ2V0IHZhbHVlIHRvIGJlIGluIGV0aGVycywgMTggZGVub3RlZCB1cHRvIDE4dGggZGVjaW1hbCBwb2ludFxyXG5cdFx0XHRcdG5ldyBEYXRlKGRlYWRsaW5lKS5nZXRUaW1lKClcclxuXHRcdFx0KTtcclxuXHJcblx0XHRhd2FpdCB0cmFuc2FjdGlvbi53YWl0KCk7XHJcblx0XHRjb25zb2xlLmxvZyhcIkNvbnRyYWN0IGNhbGxlZCBzdWNjZXNmdWxseVwiLCB0cmFuc2FjdGlvbik7XHJcblx0XHR9IGNhdGNoKGVycm9yKXtcclxuXHRcdFx0Y29uc29sZS5sb2coXCJjb250cmFjdCBjYWxsIGZhaWx1cmVcIiwgZXJyb3IpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Y29uc3QgZ2V0Q2FtcGFpZ24gPSBhc3luYygpID0+IHtcclxuXHRcdGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuSnNvblJwY1Byb3ZpZGVyKCk7XHJcblx0XHRjb25zdCBjb250cmFjdCA9IGZldGNoQ29udHJhY3QocHJvdmlkZXIpO1xyXG5cclxuXHRcdGNvbnN0IGNhbXBhaWducyA9IGF3YWl0IGNvbnRyYWN0LmdldENhbXBhaWducygpO1xyXG5cclxuXHRcdGNvbnN0IHBhcnNlZENhbXBhaWducyA9IGNhbXBhaWducy5tYXAoKGNhbXBhaWduLCBpKSA9PiAoe1xyXG5cdFx0XHRvd25lcjogY2FtcGFpZ24ub3duZXIsXHJcblx0XHRcdHRpdGxlOiBjYW1wYWlnbi50aXRsZSxcclxuXHRcdFx0ZGVzY3JpcHRpb246IGNhbXBhaWduLmRlc2NyaXB0aW9uLFxyXG5cdFx0XHR0YXJnZXQ6IGV0aGVycy51dGlscy5mb3JtYXRFdGhlcihjYW1wYWlnbi50YXJnZXQudG9TdHJpbmcoKSksXHQvL3RhcmdldCBwcm9wZXJ0eSBvZiBlYWNoIGNhbXBhaWduIG9iamVjdCBpcyBjb252ZXJ0ZWQgZnJvbSB3ZWkgdG8gZXRoZXIgYW5kIHN0b3JlZCBpbiB0aGUgcGFyc2VkQ2FtcGFpZ25zIGFycmF5IHVuZGVyIHRoZSB0YXJnZXQgcHJvcGVydHkgb2YgZWFjaCBuZXcgb2JqZWN0XHJcblx0XHRcdGRlYWRsaW5lOiBjYW1wYWlnbi5kZWFkbGluZS50b051bWJlcigpLFxyXG5cdFx0XHRhbW91bnRDb2xsZWN0ZWQ6IGV0aGVycy51dGlscy5mb3JtYXRFdGhlcihjYW1wYWlnbi5hbW91bnRDb2xsZWN0ZWQudG9TdHJpbmcoKSksXHJcblx0XHRcdHBJZDogaVxyXG5cdFx0fSkpO1xyXG5cclxuXHRcdHJldHVybiBwYXJzZWRDYW1wYWlnbnM7XHJcblx0fVxyXG5cclxuXHRjb25zdCBnZXRVc2VyQ2FtcGFpZ25zID0gYXN5bmMoKSA9PiB7XHQvL3dpbGwgcmV0dXJuIGFsbCBjYW1wYWlnbnMgY3JlYXRlZCBieSBhIHNpbmdsZSB1c2VyXHJcblx0XHRjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLkpzb25ScGNQcm92aWRlcigpO1xyXG5cdFx0Y29uc3QgY29udHJhY3QgPSBmZXRjaENvbnRyYWN0KHByb3ZpZGVyKTtcclxuXHJcblx0XHRjb25zdCBhbGxDYW1wYWlnbnMgPSBhd2FpdCBjb250cmFjdC5nZXRDYW1wYWlnbnMoKTtcclxuXHJcblx0XHRjb25zdCBhY2NvdW50cyA9IGF3YWl0IHdpbmRvdy5ldGhlcmV1bS5yZXF1ZXN0KHtcclxuXHRcdFx0bWV0aG9kOiBcImV0aF9hY2NvdW50c1wiLCAvL3JlcXVlc3QgYWNjIG9mIHVzZXJcclxuXHRcdH0pXHJcblx0XHRjb25zdCBjdXJyZW50VXNlciA9IGFjY291bnRzWzBdO1xyXG5cclxuXHRcdGNvbnN0IGZpbHRlcmVkQ2FtcGFpZ25zID0gYWxsQ2FtcGFpZ25zLmZpbHRlcihcclxuXHRcdFx0KGNhbXBhaWduKSA9PlxyXG5cdFx0XHRcdGNhbXBhaWduLm93bmVyID0gJzB4ZjM5RmQ2ZTUxYWFkODhGNjRjZTZhQjg4MjcyNzljZmZGYjkyMjY2J1xyXG5cdFx0KVxyXG5cclxuXHRcdGNvbnN0IHVzZXJEYXRhID0gZmlsdGVyZWRDYW1wYWlnbnMubWFwKChjYW1wYWlnbiwgaSkgPT4gKHtcclxuXHRcdFx0b3duZXI6IGNhbXBhaWduLm93bmVyLFxyXG5cdFx0XHR0aXRsZTogY2FtcGFpZ24udGl0bGUsXHJcblx0XHRcdGRlc2NyaXB0aW9uOiBjYW1wYWlnbi5kZXNjcmlwdGlvbixcclxuXHRcdFx0dGFyZ2V0OiBldGhlcnMudXRpbHMuZm9ybWF0RXRoZXIoY2FtcGFpZ24udGFyZ2V0LnRvU3RyaW5nKCkpLFx0Ly90YXJnZXQgcHJvcGVydHkgb2YgZWFjaCBjYW1wYWlnbiBvYmplY3QgaXMgY29udmVydGVkIGZyb20gd2VpIHRvIGV0aGVyIGFuZCBzdG9yZWQgaW4gdGhlIHBhcnNlZENhbXBhaWducyBhcnJheSB1bmRlciB0aGUgdGFyZ2V0IHByb3BlcnR5IG9mIGVhY2ggbmV3IG9iamVjdFxyXG5cdFx0XHRkZWFkbGluZTogY2FtcGFpZ24uZGVhZGxpbmUudG9OdW1iZXIoKSxcclxuXHRcdFx0YW1vdW50Q29sbGVjdGVkOiBldGhlcnMudXRpbHMuZm9ybWF0RXRoZXIoY2FtcGFpZ24uYW1vdW50Q29sbGVjdGVkLnRvU3RyaW5nKCkpLFxyXG5cdFx0XHRwSWQ6IGlcclxuXHRcdH0pKVxyXG5cclxuXHRcdHJldHVybiB1c2VyRGF0YTtcclxuXHR9XHJcblxyXG5cdGNvbnN0IGRvbmF0ZSA9IGFzeW5jKHBJZCwgYW1vdW50KSA9PiB7XHJcblx0XHQvL3VzZSB3ZWIzbW9kYWwgd2hlbmV2ZXIgd2Ugd2FudCB0byBjaGFuZ2UgdGhlIGRhdGEgb2YgdGhlIHNtYXJ0IGNvbnRyYWN0KGhlcmUgd2UgYXJlIGRvbmF0aW5nIHRoZXJlZm9yZSB0aGUgc3RhdGUgdmFyaWFibGVzIG9mIHNtYXJ0IGNvbnRyYWN0IHdpbGwgY2hhbmdlKVxyXG5cdFx0Y29uc3Qgd2ViM01vZGFsID0gbmV3IFdlYjNNb2RhbCgpO1xyXG5cdFx0Y29uc3QgY29ubmVjdGlvbiA9IGF3YWl0IHdlYjNNb2RhbC5jb25uZWN0KCk7XHJcblx0XHRjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLldlYjNQcm92aWRlcihjb25uZWN0aW9uKTtcclxuXHRcdGNvbnN0IHNpZ25lciA9IHByb3ZpZGVyLmdldFNpZ25lcigpO1xyXG5cdFx0Y29uc3QgY29udHJhY3QgPSBmZXRjaENvbnRyYWN0KHNpZ25lcik7XHJcblxyXG5cdFx0Y29uc3QgY2FtcGFpZ25EYXRhID0gYXdhaXQgY29udHJhY3QuZG9uYXRlVG9DYW1wYWlnbihwSWQsIHtcclxuXHRcdFx0dmFsdWU6IGV0aGVycy51dGlscy5wYXJzZUV0aGVyKGFtb3VudCkgLy93aGF0ZXZlciBhbW91bnQgcHJvdmlkZWQgd2lsbCBiZSBjb252ZXJ0ZWQgdG8gZXRoZXJzXHJcblx0XHR9KVxyXG5cclxuXHRcdGF3YWl0IGNhbXBhaWduRGF0YS53YWl0KCk7XHJcblx0XHRsb2NhdGlvbi5yZWxvYWQoKTsgLy9yZWxvYWQgY3VycmVudCB3ZWIgcGFnZVxyXG5cclxuXHRcdHJldHVybiBjYW1wYWlnbkRhdGE7XHJcblx0fVxyXG5cclxuXHRjb25zdCBnZXREb25hdGlvbnMgPSBhc3luYyhwSWQpID0+IHtcclxuXHRcdGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuSnNvblJwY1Byb3ZpZGVyKCk7XHJcblx0XHRjb25zdCBjb250cmFjdCA9IGZldGNoQ29udHJhY3QocHJvdmlkZXIpO1xyXG5cclxuXHRcdGNvbnN0IGRvbmF0aW9ucyA9IGF3YWl0IGNvbnRyYWN0LmdldERvbmF0b3JzKHBJZCk7XHJcblx0XHRjb25zdCBudW1iZXJPZkRvbmF0aW9ucyA9IGRvbmF0aW9uc1swXS5sZW5ndGg7XHJcblxyXG5cdFx0Y29uc3QgcGFyc2VkRG9uYXRpb25zID0gW107XHJcblxyXG5cdFx0Zm9yKGxldCBpID0gMDsgaTxudW1iZXJPZkRvbmF0aW9uczsgaSsrKVxyXG5cdFx0e1xyXG5cdFx0XHRwYXJzZWREb25hdGlvbnMucHVzaCh7XHJcblx0XHRcdFx0ZG9uYXRvcjogZG9uYXRpb25zWzBdW2ldLFxyXG5cdFx0XHRcdGRvbmF0aW9uOiBldGhlcnMudXRpbHMuZm9ybWF0RXRoZXIoZG9uYXRpb25zWzFdW2ldLnRvU3RyaW5nKCkpXHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHBhcnNlZERvbmF0aW9ucztcclxuXHR9XHJcblxyXG5cdGNvbnN0IGNoZWNrSWZXYWxsZXRDb25uZWN0ZWQgPSBhc3luYygpID0+IHtcclxuXHRcdHRyeSB7XHJcblx0XHRcdGlmKCF3aW5kb3cuZXRoZXJldW0pXHJcblx0XHRcdFx0cmV0dXJuIHNldE9wZW5FcnJvcih0cnVlKSwgc2V0RXJyb3IoXCJJbnN0YWxsIE1ldGFtYXNrXCIpO1xyXG5cclxuXHRcdFx0Y29uc3QgYWNjb3VudHMgPSBhd2FpdCB3aW5kb3cuZXRoZXJldW0ucmVxdWVzdCh7XHJcblx0XHRcdFx0bWV0aG9kOiBcImV0aF9hY2NvdW50c1wiXHJcblx0XHRcdH0pXHJcblxyXG5cdFx0XHRpZihhY2NvdW50cy5sZW5ndGgpe1xyXG5cdFx0XHRcdHNldEN1cnJlbnRBY2NvdW50KGFjY291bnRzWzBdKTtcclxuXHRcdFx0fSBlbHNle1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiTm8gQWNjb3VudCBGb3VuZFwiKTtcclxuXHRcdFx0fVxyXG5cdFx0fSBjYXRjaChlcnJvcil7XHJcblx0XHRcdGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdyb25nIHdoaWxlIGNvbm5lY3RpbmcgdG8gd2FsbGV0XCIpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0dXNlRWZmZWN0KCgpID0+IHtcclxuXHRcdGNoZWNrSWZXYWxsZXRDb25uZWN0ZWQoKTtcclxuXHR9LCBbXSk7XHJcblxyXG5cdGNvbnN0IGNvbm5lY3RXYWxsZXQgPSBhc3luYygpID0+IHtcclxuXHRcdHRyeSB7XHJcblx0XHRcdGlmKCF3aW5kb3cuZXRoZXJldW0pXHJcblx0XHRcdFx0cmV0dXJuIGNvbnNvbGUubG9nKFwiSW5zdGFsbCBNZXRhbWFza1wiKTtcclxuXHJcblx0XHRcdGNvbnN0IGFjY291bnRzID0gYXdhaXQgd2luZG93LmV0aGVyZXVtLnJlcXVlc3Qoe1xyXG5cdFx0XHRcdG1ldGhvZDogXCJldGhfcmVxdWVzdEFjY291bnRzXCJcclxuXHRcdFx0fSlcclxuXHRcdFx0c2V0Q3VycmVudEFjY291bnQoYWNjb3VudHNbMF0pO1xyXG5cdFx0fSBjYXRjaChlcnJvcil7XHJcblx0XHRcdGNvbnNvbGUubG9nKFwiRXJyb3Igd2hpbGUgY29ubmVjdGluZyB0byB3YWxsZXRcIik7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4oXHJcblx0XHQ8Q3Jvd2RGdW5kaW5nQ29udGV4dC5Qcm92aWRlclxyXG5cdFx0XHR2YWx1ZSA9IHt7XHJcblx0XHRcdFx0dGl0bGVEYXRhLFxyXG5cdFx0XHRcdGN1cnJlbnRBY2NvdW50LFxyXG5cdFx0XHRcdGNyZWF0ZUNhbXBhaWduLFxyXG5cdFx0XHRcdGdldENhbXBhaWduLFxyXG5cdFx0XHRcdGdldFVzZXJDYW1wYWlnbnMsXHJcblx0XHRcdFx0ZG9uYXRlLFxyXG5cdFx0XHRcdGdldERvbmF0aW9ucyxcclxuXHRcdFx0XHRjaGVja0lmV2FsbGV0Q29ubmVjdGVkLFxyXG5cdFx0XHRcdGNvbm5lY3RXYWxsZXRcclxuXHRcdFx0fX1cclxuXHRcdD5cclxuXHRcdHtjaGlsZHJlbn1cclxuXHRcdDwvQ3Jvd2RGdW5kaW5nQ29udGV4dC5Qcm92aWRlcj5cclxuXHQpO1xyXG59Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJXZWIzTW9kYWwiLCJldGhlcnMiLCJDcm93ZEZ1bmRpbmdBZGRyZXNzIiwiQ3Jvd2RGdW5kaW5nQUJJIiwiZmV0Y2hDb250cmFjdCIsInNpZ25lck9yUHJvdmlkZXIiLCJDb250cmFjdCIsIkNyb3dkRnVuZGluZ0NvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwiQ3Jvd2RGdW5kaW5nUHJvdmlkZXIiLCJjaGlsZHJlbiIsInRpdGxlRGF0YSIsImN1cnJlbnRBY2NvdW50Iiwic2V0Q3VycmVudEFjY291bnQiLCJlcnJvciIsInNldEVycm9yIiwib3BlbkVycm9yIiwic2V0T3BlbkVycm9yIiwiY3JlYXRlQ2FtcGFpZ24iLCJjYW1wYWlnbiIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJhbW91bnQiLCJkZWFkbGluZSIsIndlYjNNb2RhbCIsImNvbm5lY3Rpb24iLCJjb25uZWN0IiwicHJvdmlkZXIiLCJwcm92aWRlcnMiLCJXZWIzUHJvdmlkZXIiLCJzaWduZXIiLCJnZXRTaWduZXIiLCJjb250cmFjdCIsImNvbnNvbGUiLCJsb2ciLCJ0cmFuc2FjdGlvbiIsInV0aWwiLCJwYXJzZVVuaXRzIiwiRGF0ZSIsImdldFRpbWUiLCJ3YWl0IiwiZ2V0Q2FtcGFpZ24iLCJKc29uUnBjUHJvdmlkZXIiLCJjYW1wYWlnbnMiLCJnZXRDYW1wYWlnbnMiLCJwYXJzZWRDYW1wYWlnbnMiLCJtYXAiLCJpIiwib3duZXIiLCJ0YXJnZXQiLCJ1dGlscyIsImZvcm1hdEV0aGVyIiwidG9TdHJpbmciLCJ0b051bWJlciIsImFtb3VudENvbGxlY3RlZCIsInBJZCIsImdldFVzZXJDYW1wYWlnbnMiLCJhbGxDYW1wYWlnbnMiLCJhY2NvdW50cyIsIndpbmRvdyIsImV0aGVyZXVtIiwicmVxdWVzdCIsIm1ldGhvZCIsImN1cnJlbnRVc2VyIiwiZmlsdGVyZWRDYW1wYWlnbnMiLCJmaWx0ZXIiLCJ1c2VyRGF0YSIsImRvbmF0ZSIsImNhbXBhaWduRGF0YSIsImRvbmF0ZVRvQ2FtcGFpZ24iLCJ2YWx1ZSIsInBhcnNlRXRoZXIiLCJsb2NhdGlvbiIsInJlbG9hZCIsImdldERvbmF0aW9ucyIsImRvbmF0aW9ucyIsImdldERvbmF0b3JzIiwibnVtYmVyT2ZEb25hdGlvbnMiLCJsZW5ndGgiLCJwYXJzZWREb25hdGlvbnMiLCJwdXNoIiwiZG9uYXRvciIsImRvbmF0aW9uIiwiY2hlY2tJZldhbGxldENvbm5lY3RlZCIsImNvbm5lY3RXYWxsZXQiLCJQcm92aWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./Context/CrowdFunding.js\n"));

/***/ })

});